trigger:
- '*'



stages:
- stage: 'Build'
  
  displayName: 'Build the Web Application'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'
  #  condition: false
    pool:
      name: 'MyAgentPool'
    variables:
      buildConfiguration: 'Release'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK 8.x'
      inputs:
        PackageType: sdk
        version: '8.x'
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: 'Build Step'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
  
    - task: PublishBuildArtifacts@1
      displayName: 'Build Artifact Step'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'WelcomeWorldAppDrop'

- stage: 'Deploy'
  displayName: 'Deploy the Web Application'
  dependsOn: Build
  jobs:
  - deployment: 'Deploy'
    displayName: 'Deployment Job'
    pool:
      name: 'MyAgentPool'
    environment: development
    variables:
    -  group: Release
    strategy:
     runOnce:
       
      deploy:
        steps:
        - download: current
          artifact: WelcomeWorldAppDrop
        - task: AzureWebApp@1
          displayName: 'Azure App Service Deploy website'
          inputs:
            azureSubscription: 'Resource Manager - WelcomeWorld App'
            appName: '$(WebAppName)'
            appType: webAppLinux
            package: '$(Build.ArtifactStagingDirectory)/drop/*.zip'